// Generated by CoffeeScript 1.6.3
var Commands;

TabState.prototype.send = function(message, data) {
  if (data == null) {
    data = {};
  }
  return this.tab.page.dispatchMessage(message, data);
};

TabState.prototype.bundledScriptURI = function() {
  return safari.extension.baseURI + 'livereload.js';
};

LiveReloadGlobal.isAvailable = function(tab) {
  return !!tab.url;
};

LiveReloadGlobal.initialize();

Commands = {
  toggle: {
    invoke: function(event) {
      LiveReloadGlobal.toggle(event.target.browserWindow.activeTab);
      return event.target.validate();
    },
    validate: function(event) {
      var status;
      this.toolbarItem = event.target;
      LiveReloadGlobal.killZombieTabs();
      status = LiveReloadGlobal.tabStatus(event.target.browserWindow.activeTab);
      event.target.disabled = !status.buttonEnabled;
      event.target.toolTip = status.buttonToolTip;
      return event.target.image = safari.extension.baseURI + status.buttonIcon;
    },
    revalidate: function() {
      var _ref;
      return (_ref = this.toolbarItem) != null ? _ref.validate() : void 0;
    }
  }
};

safari.application.addEventListener('command', function(event) {
  var _ref;
  return (_ref = Commands[event.command]) != null ? typeof _ref.invoke === "function" ? _ref.invoke(event) : void 0 : void 0;
});

safari.application.addEventListener('validate', function(event) {
  var _ref;
  return (_ref = Commands[event.command]) != null ? typeof _ref.validate === "function" ? _ref.validate(event) : void 0 : void 0;
});

safari.application.addEventListener('message', function(event) {
  switch (event.name) {
    case 'status':
      LiveReloadGlobal.updateStatus(event.target, event.message);
      return Commands.toggle.revalidate();
  }
});
