// Generated by CoffeeScript 1.6.3
var ToggleButton, findTabByContentDocument;

findTabByContentDocument = function(doc) {
  var tab, _i, _len, _ref;
  _ref = gBrowser.tabs;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    tab = _ref[_i];
    if (gBrowser.getBrowserForTab(tab).contentDocument === doc) {
      return tab;
    }
  }
  return null;
};

LiveReloadInjected.prototype.send = function(eventName, data) {
  var tab;
  tab = findTabByContentDocument(this.document);
  if (!tab) {
    return;
  }
  switch (eventName) {
    case 'status':
      LiveReloadGlobal.updateStatus(tab, data);
      return ToggleButton.update();
  }
};

TabState.prototype.send = function(eventName, data) {
  var doc, injected;
  if (data == null) {
    data = {};
  }
  doc = gBrowser.getBrowserForTab(this.tab).contentDocument;
  injected = doc.__LiveReload_injected;
  if (!injected) {
    alert("There is no LiveReloadInjected for " + doc.location.href);
    return;
  }
  switch (eventName) {
    case 'alert':
      return alert(data);
    case 'enable':
      return injected.enable(data);
    case 'disable':
      return injected.disable();
  }
};

TabState.prototype.bundledScriptURI = function() {
  return 'chrome://livereload/content/livereload.js';
};

LiveReloadGlobal.isAvailable = function(tab) {
  return true;
};

LiveReloadGlobal.initialize();

ToggleButton = {
  initialize: function() {
    this.toggleButton = document.getElementById('livereload-button');
    return this.toggleButton.addEventListener('command', function(event) {
      LiveReloadGlobal.toggle(gBrowser.selectedTab);
      return ToggleButton.update();
    });
  },
  update: function() {
    var status;
    status = LiveReloadGlobal.tabStatus(gBrowser.selectedTab);
    this.toggleButton.tooltiptext = status.buttonToolTip;
    return this.toggleButton.image = "chrome://livereload/skin/" + status.buttonIcon;
  }
};

window.addEventListener('load', function() {
  var ContentScriptInjectionSimulation;
  ToggleButton.initialize();
  ContentScriptInjectionSimulation = {
    initialize: function() {
      return gBrowser.addEventListener('DOMContentLoaded', function(event) {
        var doc, win, _ref;
        doc = event.originalTarget;
        win = doc.defaultView;
        if ((doc != null ? (_ref = doc.location) != null ? _ref.href : void 0 : void 0) === 'about:blank') {
          return;
        }
        doc.__LiveReload_injected = new LiveReloadInjected(doc, win, 'Firefox');
        return win.addEventListener("unload", function(event) {
          return doc.__LiveReload_injected = null;
        });
      });
    }
  };
  ContentScriptInjectionSimulation.initialize();
  gBrowser.tabContainer.addEventListener('TabSelect', function(event) {
    var tab;
    tab = event.target;
    return ToggleButton.update();
  });
  return gBrowser.tabContainer.addEventListener('TabClose', function(event) {
    LiveReloadGlobal.killZombieTab(event.target);
    return ToggleButton.update();
  });
});
